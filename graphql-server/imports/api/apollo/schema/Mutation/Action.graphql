type ActionPayload {
  action: Action
}

input CompleteActionInput {
  _id: ID!
  completionComments: String
}

input UndoActionCompletionInput {
  _id: ID!
}

input VerifyActionInput {
  _id: ID!
  verificationComments: String
  isVerifiedAsEffective: Boolean
}

input UndoActionVerificationInput {
  _id: ID!
}

input DeleteActionInput {
  _id: ID!
}

input ActionLinkedToInput {
  documentId: ID!
  documentType: String!
}

input CreateActionInput {
  organizationId: ID!
  title: String!
  description: String
  ownerId: ID!
  planInPlace: String
  completionTargetDate: DateTime!
  toBeCompletedBy: ID!
  linkedTo: [ActionLinkedToInput]!
  type: String!
}

input LinkDocToActionInput {
  _id: ID!
  documentId: ID!
  documentType: String!
}

input UnlinkDocFromActionInput {
  _id: ID!
  documentId: ID!
}

input UpdateActionInput {
  _id: ID!
  title: String
  description: String
  ownerId: ID
  planInPlace: String,
  completionTargetDate: DateTime
  toBeCompletedBy: ID
  completionComments: String
  completedAt: DateTime
  completedBy: ID
  verifiedAt: DateTime
  verifiedBy: ID
  verificationComments: String
  verificationTargetDate: DateTime
  toBeVerifiedBy: ID
}

type Mutation {
  createAction(input: CreateActionInput!): ActionPayload
  deleteAction(input: DeleteActionInput!): ActionPayload
  completeAction(input: CompleteActionInput!): Action
  undoActionCompletion(input: UndoActionCompletionInput!): Action
  verifyAction(input: VerifyActionInput!): ActionPayload
  undoActionVerification(input: UndoActionVerificationInput!): ActionPayload
  linkDocToAction(input: LinkDocToActionInput!): Action
  unlinkDocFromAction(input: UnlinkDocFromActionInput!): ActionPayload
  updateAction(input: UpdateActionInput!): Action
}
